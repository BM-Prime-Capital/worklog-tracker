name: Deploy to EC2 (worklog-tracker)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy worklog-tracker to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Fix permissions on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo chmod -R 755 /root/.nvm/versions/node/v20.19.4/bin/
            sudo chown -R $USER:$USER /root/.nvm/versions/node/v20.19.4/
          EOF

      - name: Rsync project to EC2 (exclude .env)
        run: |
          rsync -avz --delete \
            --exclude='.env' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/worklog-tracker

      - name: Recreate .env on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -euo pipefail
            echo "${{ secrets.ENV_PROD }}" > "/var/www/worklog-tracker/.env"
          EOF

      - name: Build & restart app on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -euo pipefail

            APP_PATH="/var/www/worklog-tracker"
            cd "$APP_PATH"

            echo '✅ Marking as safe Git directory'
            git config --global --add safe.directory "$APP_PATH"

            # Define absolute paths to Node.js and npm
            NODE_BIN="/root/.nvm/versions/node/v20.19.4/bin/node"
            NPM_BIN="/root/.nvm/versions/node/v20.19.4/bin/npm"

            echo "✅ Node version: $($NODE_BIN -v)"
            echo "✅ NPM version: $($NPM_BIN -v)"

            echo '⚙️ Reinstalling dependencies'
            export NPM_CONFIG_LEGACY_PEER_DEPS=true
            rm -rf node_modules
            $NPM_BIN ci

            echo '🏗️ Building Next.js app'
            NODE_ENV=production $NPM_BIN run build

            echo '🚀 Restarting app with PM2'
            # Check if pm2 exists, if not install it using the absolute npm path
            if ! command -v pm2 >/dev/null 2>&1; then
              $NPM_BIN i -g pm2
            fi
            
            pm2 delete worklog-tracker || true
            PORT=3000 pm2 start $NPM_BIN --name worklog-tracker -- start
            pm2 save
          EOF
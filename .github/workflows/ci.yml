name: Deploy to EC2 (worklog-tracker)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy worklog-tracker to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Install Node.js on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Install Node.js 20.x si pas déjà installé
            if ! command -v node >/dev/null 2>&1; then
              echo "📦 Installing Node.js 20..."
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            
            # Vérifier l'installation
            echo "✅ Node.js version: $(node -v)"
            echo "✅ npm version: $(npm -v)"
          EOF

      - name: Rsync project to EC2 (exclude .env)
        run: |
          rsync -avz --delete \
            --exclude='.env' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/worklog-tracker

      - name: Recreate .env on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -euo pipefail
            echo "${{ secrets.ENV_PROD }}" > "/var/www/worklog-tracker/.env"
          EOF

      - name: Build & restart app on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -euo pipefail

            APP_PATH="/var/www/worklog-tracker"
            cd "$APP_PATH"

            echo '✅ Marking as safe Git directory'
            git config --global --add safe.directory "$APP_PATH"

            echo "✅ Node version: $(node -v)"
            echo "✅ NPM version: $(npm -v)"

            echo '⚙️ Reinstalling dependencies'
            export NPM_CONFIG_LEGACY_PEER_DEPS=true
            rm -rf node_modules
            npm ci

            echo '🏗️ Building Next.js app'
            NODE_ENV=production npm run build

            echo '🚀 Restarting app with PM2'
            # Installation forcée de PM2 dans le PATH global
            sudo npm install -g pm2
            export PATH=$PATH:$(npm root -g)/.bin
            
            pm2 delete worklog-tracker || true
            PORT=3002 pm2 start npm --name worklog-tracker -- start
            pm2 save
            pm2 startup
          EOF
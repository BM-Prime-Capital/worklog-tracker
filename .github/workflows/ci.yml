name: Deploy to EC2 (worklog-tracker)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy worklog-tracker to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Rsync project to EC2 (exclude .env)
        run: |
          rsync -avz --delete \
            --exclude='.env' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/worklog-tracker
      - name: Debug secrets
        run: |
            echo "EC2_HOST = '${{ secrets.EC2_HOST }}'"
            echo "EC2_USER = '${{ secrets.EC2_USER }}'"


      - name: Recreate .env on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -euo pipefail
            echo "${{ secrets.ENV_PROD }}" > "/var/www/worklog-tracker/.env"
          EOF

      - name: Build & restart app on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -euo pipefail

            APP_PATH="/var/www/worklog-tracker"
            cd "\$APP_PATH"

            echo '✅ Marking as safe Git directory'
            git config --global --add safe.directory "\$APP_PATH"

            # Charger nvm si dispo
            if [ -f ~/.nvm/nvm.sh ]; then . ~/.nvm/nvm.sh; fi
            if [ -f .nvmrc ] && command -v nvm >/dev/null 2>&1; then
              nvm install --silent
              nvm use --silent
            fi

            echo '⚙️ Reinstalling dependencies'
            export NPM_CONFIG_LEGACY_PEER_DEPS=true
            rm -rf node_modules
            npm ci

            echo '🏗️ Building Next.js app'
            NODE_ENV=production npm run build

            echo '🚀 Restarting app with PM2'
            command -v pm2 >/dev/null 2>&1 || npm i -g pm2
            pm2 delete worklog-tracker || true
            PORT=3000 pm2 start npm --name worklog-tracker -- start
            pm2 save
          EOF
